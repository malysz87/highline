= Change Log

Below is a complete listing of changes for each revision of HighLine.

== 0.6.0

* Improved "stty" state restoring code.

== 0.5.0

* Implemented <tt>echo = false</tt> for HighLine::Question objects, primarily to
  make fetching passwords trivial.
* Fixed an auto-complete bug that could cause a crash when the user gave an
  answer that didn't complete to any valid choice.
* Implemented +case+ for HighLine::Question objects to provide character case 
  conversions on given answers.  Can be set to <tt>:up</tt>, <tt>:down</tt>, or
  <tt>:capitalize</tt>.
* Exposed <tt>@answer</tt> to the response system, to allow response that are
  aware of incorrect input.
* Implemented +confirm+ for HighLine::Question objects to allow for verification
  for sensitive user choices.  If set to +true+, user will have to answer an
  "Are you sure?  " question.  Can also be set to the question to confirm with
  the user.

== 0.4.0

* Added <tt>@wrap_at</tt> and <tt>@page_at</tt> settings and accessors to
  HighLine, to control text flow.
* Implemented line wrapping with adjustable limit.
* Implemented paged printing with adjustable limit.

== 0.3.0

* Added support for installing with setup.rb.
* All output is now treated as an ERb sequence, allowing Ruby code to be
  embedded in output strings.
* Added support for ANSI color sequences in say().  (And everything else
  by extension.)
* Added whitespace handling for answers.  Can be set to <tt>:strip</tt>,
  <tt>:chomp</tt>, <tt>:collapse</tt>, <tt>:strip_and_collapse</tt>,
  <tt>:chomp_and_collapse</tt>, <tt>:remove</tt>, or <tt>:none</tt>.
* Exposed question details to ERb completion through @question, to allow for
  intelligent responses.
* Simplified HighLine internals using @question.
* Added support for fetching single character input either with getc() or
  HighLine's own cross-platform terminal input routine.
* Improved type conversion to handle user defined classes.

== 0.2.0

* Added Unit Tests to cover an already fixed output bug in the future.
* Added Rakefile and setup test action (default).
* Renamed HighLine::Answer to HighLine::Question to better illustrate its role.
* Renamed fetch_line() to get_response() to better define its goal.
* Simplified explain_error in terms of the Question object.
* Renamed accept?() to in_range?() to better define purpose.
* Reworked valid?() into valid_answer?() to better fit Question object.
* Reworked <tt>@member</tt> into <tt>@in</tt>, to make it easier to remember and
  switched implementation to include?().
* Added range checks for @above and @below.
* Fixed the bug causing ask() to swallow NoMethodErrors.
* Rolled ask_on_error() into responses.
* Redirected imports to Kernel from Object.
* Added support for <tt>validate = lambda { ... }</tt>.
* Added default answer support.
* Fixed bug that caused ask() to die with an empty question.
* Added complete documentation.
* Improve the implemetation of agree() to be the intended "yes" or "no" only
  question.
* Added Rake tasks for documentation and packaging.
* Moved project to RubyForge.

== 0.1.0

* Initial release as the solution to
  {Ruby Quiz #29}[http://www.rubyquiz.com/quiz29.html].
